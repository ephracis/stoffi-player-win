<!--Styles.xaml
	
	All the styles and templates used on the XAML controls.
	
	= = = = = = = = = =
	
	Copyright 2012 Simplare
	
	This code is part of the Stoffi Music Player Project.
	Visit our website at: stoffiplayer.com
	
	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version
	3 of the License, or (at your option) any later version.
	
	See stoffiplayer.com/license for more information.
	-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:properties="clr-namespace:Stoffi.Properties"
					xmlns:tb="http://www.hardcodet.net/taskbar"
					xmlns:local="clr-namespace:Stoffi.Player.GUI.Controls"
					x:Class="Stoffi.Styles"
					x:ClassModifier="public">
	<!-- style combobox -->
	<ControlTemplate x:Key="AeroComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="25" />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
				<Border x:Name="Border2" CornerRadius="2" Background="Transparent" BorderThickness="1" BorderBrush="Transparent"/>
			</Border>
			<Border Grid.Column="0" CornerRadius="2,0,0,2" Background="Transparent" BorderThickness="1"/>
			<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#0066cc" Margin="3,0,7,0"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="Arrow" Property="Fill" Value="#3399ff" />
				<Setter TargetName="Border" Property="BorderBrush" Value="#e2e7ed" />
				<Setter TargetName="Border2" Property="Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<GradientStop Color="#fafcfd" Offset="0.0"/>
							<GradientStop Color="#f6f8fa" Offset="0.5"/>
							<GradientStop Color="#edf2f8" Offset="0.5"/>
							<GradientStop Color="#e5ebf4" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
				<Setter TargetName="Arrow" Property="Fill" Value="#3399ff" />
				<Setter TargetName="Border" Property="BorderBrush" Value="#becad8" />
				<Setter TargetName="Border2" Property="Background" Value="Transparent" />
				<Setter TargetName="Border" Property="Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<GradientStop Color="#d5dde6" Offset="0.0"/>
							<GradientStop Color="#f3f5f7" Offset="0.2"/>
							<GradientStop Color="#f5f6f8" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="AeroComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="Foreground" Value="#0066cc" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource AeroComboBoxItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="ToggleButton" Template="{StaticResource AeroComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="10,3,25,3"/>
						<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False">
							<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Grid.Effect>
									<DropShadowEffect BlurRadius="3" Direction="315" Opacity="0.5" Color="Black" ShadowDepth="3"/>
								</Grid.Effect>
								<Border x:Name="DropDownBorder" BorderThickness="1">
									<Border.BorderBrush>
										<SolidColorBrush Color="#979797" />
									</Border.BorderBrush>
									<Border.Background>
										<SolidColorBrush Color="#f1f1f1" />
									</Border.Background>
								</Border>
								<ScrollViewer Margin="3,4,8,7" SnapsToDevicePixels="True">
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
										<Border BorderThickness="0,0,1,0" BorderBrush="#ffffff" Width="27" VerticalAlignment="Stretch">
											<Border BorderThickness="0,0,1,0" BorderBrush="#e2e3e3" Width="26" VerticalAlignment="Stretch"/>
										</Border>
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Margin="-25,0,0,0" HorizontalAlignment="Stretch"/>

									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="#3399ff" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,5,5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AeroComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Outer" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" CornerRadius="2" HorizontalAlignment="Stretch">
						<Border x:Name="Inner" BorderThickness="1" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Stretch">
							<StackPanel Orientation="Horizontal">

								<Border x:Name="CheckOuter" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="1" BorderBrush="#aecff7" CornerRadius="2" Width="22" Height="22" Visibility="Hidden" Margin="-2,-2,10,-2">
									<Border x:Name="CheckInner" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
										<Border.Background>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Color="#f3f5f7" Offset="0.0"/>
												<GradientStop Color="#e7eef7" Offset="1.0"/>
											</LinearGradientBrush>
										</Border.Background>
										<Image Source="\Images\Misc\DropDownSelected.png" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"/>
									</Border>
								</Border>
								<ContentPresenter Margin="0,0,15,0" VerticalAlignment="Center" MinWidth="120" />
							</StackPanel>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="CheckOuter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Outer" Property="BorderBrush" Value="#aecff7" />
							<Setter TargetName="Inner" Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientStop Color="#f3f5f7" Offset="0.0"/>
										<GradientStop Color="#e7eef7" Offset="1.0"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ClassicComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource ClassicComboBoxItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="ToggleButton" Template="{StaticResource ClassicComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="10,4,25,2"/>
						<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False">
							<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" BorderThickness="0,0,1,1">
									<Border.BorderBrush>
										<SolidColorBrush Color="#404040" />
									</Border.BorderBrush>
									<Border.Background>
										<SolidColorBrush Color="#D4D0C8" />
									</Border.Background>
								</Border>
								<ScrollViewer Margin="0,1,7,7" SnapsToDevicePixels="True">
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Margin="0,0,0,0" HorizontalAlignment="Stretch"/>
									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,5,5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ClassicComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="25" />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="1,1,0,0" BorderBrush="Transparent" Background="Transparent">
				<Border x:Name="Border2" Background="Transparent" BorderThickness="0,0,1,1" BorderBrush="Transparent"/>
			</Border>
			<Border Grid.Column="0" Background="Transparent" BorderThickness="1"/>
			<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="Black" Margin="3,2,7,0"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="Border" Property="BorderBrush" Value="White" />
				<Setter TargetName="Border2" Property="BorderBrush" Value="#404040" />
				<Setter TargetName="Border2" Property="Background" Value="#D4D0C8"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
				<Setter TargetName="Border2" Property="BorderBrush" Value="White" />
				<Setter TargetName="Border" Property="BorderBrush" Value="#404040" />
				<Setter TargetName="Border2" Property="Background" Value="#D4D0C8"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ClassicComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Outer" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Stretch" Margin="0">
						<Border x:Name="Inner" BorderThickness="1" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Stretch">
							<StackPanel Orientation="Horizontal">

								<Border x:Name="CheckOuter" SnapsToDevicePixels="true" BorderThickness="0" Width="15" Height="15" Visibility="Hidden" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
									<Border x:Name="CheckInner" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
										<Image Source="\Images\Misc\DropDownSelected.png" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"/>
									</Border>
								</Border>
								<ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center" MinWidth="100" />
							</StackPanel>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="CheckOuter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Outer" Property="BorderBrush" Value="{x:Null}" />
							<Setter TargetName="Inner" Property="Background" Value="#10246A"/>
							<Setter Property="Foreground" Value="White"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Control colors.-->
	<Color x:Key="WindowColor">#FFE8EDF9</Color>
	<Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
	<Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

	<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
	<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
	<Color x:Key="DisabledForegroundColor">#FF888888</Color>

	<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
	<Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

	<Color x:Key="ControlLightColor">White</Color>
	<Color x:Key="ControlMediumColor">#FF7381F9</Color>
	<Color x:Key="ControlDarkColor">#FF211AA9</Color>

	<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
	<Color x:Key="ControlPressedColor">#FF211AA9</Color>


	<Color x:Key="GlyphColor">#0066cc</Color>
	<Color x:Key="GlyphMouseOver">#3399ff</Color>

	<!--Border colors-->
	<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
	<Color x:Key="BorderMediumColor">#FF888888</Color>
	<Color x:Key="BorderDarkColor">#FF444444</Color>

	<Color x:Key="PressedBorderLightColor">#FF888888</Color>
	<Color x:Key="PressedBorderDarkColor">#FF444444</Color>

	<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
	<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

	<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

	<!-- style the toolbar -->
	<Style x:Key="AeroToolbarButtonFocusStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="AeroToolbarBackground">
		<GradientStop Color="#fafcfd" Offset="0.0"/>
		<GradientStop Color="#e6f0fa" Offset="0.5"/>
		<GradientStop Color="#dce6f4" Offset="0.5"/>
		<GradientStop Color="#dde9f7" Offset="1.0"/>
	</LinearGradientBrush>
	<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="AeroToolbarButtonHoverBackground">
		<GradientStop Color="#f8fbfe" Offset="0.0"/>
		<GradientStop Color="#edf2fa" Offset="0.5"/>
		<GradientStop Color="#d7e4f4" Offset="0.5"/>
		<GradientStop Color="#c1d2e8" Offset="1.0"/>
	</LinearGradientBrush>
	<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="AeroToolbarButtonClickBackground">
		<GradientStop Color="#c9d4e4" Offset="0.0"/>
		<GradientStop Color="#e1ebf5" Offset="0.2"/>
		<GradientStop Color="#d8e4f1" Offset="0.5"/>
		<GradientStop Color="#cfdbec" Offset="0.5"/>
		<GradientStop Color="#cfdced" Offset="1.0"/>
	</LinearGradientBrush>
	<Style TargetType="Border" x:Key="AeroToolbarStyle">
		<Setter Property="Background" Value="{StaticResource AeroToolbarBackground}"/>
		<Setter Property="BorderThickness" Value="0,0,0,2"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0.93548387096" EndPoint="0,1">
					<GradientStop Color="#cddaea" Offset="0"/>
					<GradientStop Color="#cddaea" Offset="0.5"/>
					<GradientStop Color="#a0afc3" Offset="0.5"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Border" x:Key="AeroToolbarBorderStyle">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#ffffff" Offset="0.0"/>
					<GradientStop Color="#f3f8fd" Offset="0.5"/>
					<GradientStop Color="#eef3fa" Offset="0.5"/>
					<GradientStop Color="#eef4fb" Offset="0.9"/>
					<GradientStop Color="#e4effb" Offset="1.0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" x:Key="AeroToolbarButtonStyle">
		<Setter Property="Foreground" Value="#1e395b"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource AeroToolbarButtonFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" x:Name="OuterBorder" BorderBrush="Transparent">
						<Border SnapsToDevicePixels="True" CornerRadius="2" Padding="13,0,13,0" BorderThickness="1" x:Name="InnerBorder" BorderBrush="Transparent">
							<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="True"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource AeroToolbarButtonHoverBackground}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource AeroToolbarButtonClickBackground}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#bbaabcd5"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="Transparent"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" x:Key="AeroToolbarSmallButtonStyle">
		<Setter Property="Foreground" Value="#1e395b"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource AeroToolbarButtonFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" x:Name="OuterBorder" BorderBrush="Transparent">
						<Border SnapsToDevicePixels="True" CornerRadius="2" Padding="5,0,5,0" BorderThickness="1" x:Name="InnerBorder" BorderBrush="Transparent">
							<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="True"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource AeroToolbarButtonHoverBackground}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource AeroToolbarButtonClickBackground}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#bbaabcd5"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="InnerBorder" Property="Background" Value="Transparent"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f3f6fb"/>
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#BBaabcd3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" x:Key="ClassicToolbarButtonStyle">
		<Setter Property="Padding" Value="13,0,13,0"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="False">
				<Setter Property="BorderBrush" Value="{x:Null}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Button" x:Key="ClassicToolbarSmallButtonStyle">
		<Setter Property="Padding" Value="5,0,5,0"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="False">
				<Setter Property="BorderBrush" Value="{x:Null}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- style the playback buttons -->
	<Style x:Key="NextButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="NextButton" Source="Images\Buttons\Next.png" Width="29" Height="38"/>
						<Image x:Name="NextButtonShine"  Source="Images\Buttons\Next Shine.png" Width="29" Height="38" Visibility="Hidden"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="NextButtonShine" Value="Visible"/>
							<Setter Property="Visibility" TargetName="NextButton" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PreviousButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="PreviousButton" Source="Images\Buttons\Previous.png" Width="29" Height="38"/>
						<Image x:Name="PreviousButtonShine" Source="Images\Buttons\Previous Shine.png" Width="29" Height="38" Visibility="Hidden"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="PreviousButtonShine" Value="Visible"/>
							<Setter Property="Visibility" TargetName="PreviousButton" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PlayButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="PlayButton" Source="Images\Buttons\Play.png" Width="38" Height="38"/>
						<Image x:Name="PlayButtonShine" Source="Images\Buttons\Play Shine.png" Width="38" Height="38" Visibility="Hidden"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="PlayButtonShine" Value="Visible"/>
							<Setter Property="Visibility" TargetName="PlayButton" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PauseButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="PauseButton" Source="Images\Buttons\Pause.png" Width="38" Height="38"/>
						<Image x:Name="PauseButtonShine" Source="Images\Buttons\Pause Shine.png" Width="38" Height="38" Visibility="Hidden"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="PauseButtonShine" Value="Visible"/>
							<Setter Property="Visibility" TargetName="PauseButton" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- style the shuffe and repeat buttons -->
	<Style x:Key="RepeatAllButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="RepeatButton" Source="Images\Buttons\Repeat All.png" Width="20" Height="20"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RepeatOneButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="RepeatButton" Source="Images\Buttons\Repeat One.png" Width="20" Height="20"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RepeatGrayButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="RepeatButton" Source="Images\Buttons\Repeat Gray.png" Width="20" Height="20"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ShuffleButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="ShuffleButton" Source="Images\Buttons\Shuffle.png" Width="20" Height="20"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ShuffleGrayButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="ShuffleButton" Source="Images\Buttons\Shuffle Gray.png" Width="20" Height="20"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- style the details pane -->
	<SolidColorBrush x:Key="DetailsTitle" Color="Black"/>
	<SolidColorBrush x:Key="DetailsDescription" Color="#5A6779"/>
	<SolidColorBrush x:Key="DetailsPaneKey" Color="#766790"/>
	<SolidColorBrush x:Key="DetailsPaneValue" Color="#1E395B"/>
	<Style x:Key="AeroDetailsPaneStyle" TargetType="StatusBar">
		<Setter Property="Background" Value="#f1f5fb"/>
		<Setter Property="Foreground" Value="#1e395b"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<SolidColorBrush x:Key="ClassicDetailsPaneBackground" Color="White"/>
	<Style x:Key="ClassicDetailsPaneStyle" TargetType="StatusBar">
		<Setter Property="Padding" Value="5"/>
		<Setter Property="BorderThickness" Value="0 2 0 0"/>
		<Setter Property="Background" Value="{DynamicResource ClassicDetailsPaneBackground}"/>
	</Style>
	<ControlTemplate x:Key="CurrentTrackTemplate" TargetType="{x:Type ListViewItem}">
		<StackPanel>
			<GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}">
				<GridViewRowPresenter.Resources>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="FontWeight" Value="Bold"/>
					</Style>
				</GridViewRowPresenter.Resources>
			</GridViewRowPresenter>
		</StackPanel>
	</ControlTemplate>

	<!-- style the track info pane -->
	<SolidColorBrush x:Key="InfoPaneTitle" Color="#006e12"/>
	<SolidColorBrush x:Key="InfoPaneText" Color="#FF5A6779"/>

	<!-- style the track list -->
	<Style x:Key="AeroTrackListHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="#FF5A6779"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>
	<Style x:Key="AeroTrackListStyle" TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderBrush" Value="#d6e5f5"/>
		<Setter Property="BorderThickness" Value="0 1 0 0"/>
	</Style>
	<LinearGradientBrush x:Key="ColumnHeaderThumbBackground" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#d6e5f5" Offset="0.0" />
		<GradientStop Color="White" Offset="1.0" />
	</LinearGradientBrush>
	<Style x:Key="ClassicTrackListHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>
	<Style x:Key="ClassicTrackListStyle" TargetType="{x:Type ListView}">
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style x:Key="AeroTrackListHeaderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right" Value="-8"/>
		<Setter Property="Canvas.Top" Value="-1"/>
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="#00F90000" Padding="0" BorderThickness="1">
						<Rectangle x:Name="HeaderThumb" Fill="{StaticResource ColumnHeaderThumbBackground}" HorizontalAlignment="Center" Width="1"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="AeroTrackListHeaderThumbHoverStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right" Value="-8"/>
		<Setter Property="Canvas.Top" Value="-1"/>
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="#00F90000" Padding="0" BorderThickness="1">
						<Rectangle x:Name="HeaderThumb" Fill="#FFe2e8f1" HorizontalAlignment="Center" Width="1"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="AeroTrackListHeaderTemplateLeft" TargetType="{x:Type GridViewColumnHeader}">
		<Grid>
			<Border BorderBrush="Transparent" Background="Transparent" BorderThickness="1,0,1,1" x:Name="OuterBorder" SnapsToDevicePixels="True">
				<Border BorderBrush="Transparent" BorderThickness="0,1,0,0" Background="Transparent" x:Name="InnerBorder" 
						Margin="1,0,1,1" Padding="0" SnapsToDevicePixels="True">
					<ContentPresenter 
						x:Name="HeaderContent" 
						Margin="0"
						Content="{TemplateBinding Content}" 
						HorizontalAlignment="Left"
						ContentStringFormat="{TemplateBinding ContentStringFormat}" 
						ContentTemplate="{TemplateBinding ContentTemplate}"/>
				</Border>
			</Border>
			<Canvas>
				<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource AeroTrackListHeaderThumbStyle}"/>
			</Canvas>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#e2e8f1"/>
				<Setter TargetName="InnerBorder" Property="Background" Value="#f5f7fa"/>
				<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f5f7fa"/>
				<Setter TargetName="PART_HeaderGripper" Property="Style" Value="{StaticResource AeroTrackListHeaderThumbHoverStyle}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="AeroTrackListHeaderTemplateRight" TargetType="{x:Type GridViewColumnHeader}">
		<Grid>
			<Border BorderBrush="Transparent" Background="Transparent" BorderThickness="1,0,1,1" x:Name="OuterBorder" SnapsToDevicePixels="True">
				<Border BorderBrush="Transparent" BorderThickness="0,1,0,0" Background="Transparent" x:Name="InnerBorder" 
						Margin="1,0,1,1" Padding="0" SnapsToDevicePixels="True">
					<ContentPresenter 
						x:Name="HeaderContent" 
						Margin="0"
						Content="{TemplateBinding Content}" 
						HorizontalAlignment="Right"
						ContentStringFormat="{TemplateBinding ContentStringFormat}" 
						ContentTemplate="{TemplateBinding ContentTemplate}"/>
				</Border>
			</Border>
			<Canvas>
				<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource AeroTrackListHeaderThumbStyle}"/>
			</Canvas>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="OuterBorder" Property="BorderBrush" Value="#e2e8f1"/>
				<Setter TargetName="InnerBorder" Property="Background" Value="#f5f7fa"/>
				<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#f5f7fa"/>
				<Setter TargetName="PART_HeaderGripper" Property="Style" Value="{StaticResource AeroTrackListHeaderThumbHoverStyle}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<DataTemplate x:Key="HeaderTemplateArrowUp">
		<DockPanel>
			<Image Source="\Images\Misc\SortArrowUp.png" DockPanel.Dock="Top" Width="7" Height="4"/>
			<TextBlock Text="{Binding}" DockPanel.Dock="Top" Margin="5,0,3,0" TextTrimming="CharacterEllipsis"/>
		</DockPanel>
	</DataTemplate>
	<DataTemplate x:Key="HeaderTemplateArrowDown">
		<DockPanel>
			<Image Source="\Images\Misc\SortArrowDown.png" DockPanel.Dock="Top" Width="7" Height="4"/>
			<TextBlock Text="{Binding}" DockPanel.Dock="Top" Margin="5,0,3,0" TextTrimming="CharacterEllipsis"/>
		</DockPanel>
	</DataTemplate>
	<DataTemplate x:Key="HeaderTemplate">
		<TextBlock Text="{Binding}" Margin="5,4,3,0" TextTrimming="CharacterEllipsis"/>
	</DataTemplate>

	<DataTemplate x:Key="CommonTemplate">
		<TextBlock HorizontalAlignment="Left"	
				   VerticalAlignment="Center"
				   TextTrimming="CharacterEllipsis"
				   Foreground="Gray"
				   Text="{Binding}"/>
	</DataTemplate>
	<DataTemplate x:Key="CommonActiveTemplate">
		<TextBlock
				HorizontalAlignment="Left"	
				VerticalAlignment="Center"
				TextTrimming="CharacterEllipsis"
				Foreground="Black"
				Text="{Binding}"/>
	</DataTemplate>

	<DataTemplate x:Key="NumberCellTemplate">
		<TextBlock Text="{Binding Number}" HorizontalAlignment="Right" Foreground="Gray"/>
	</DataTemplate>
	<DataTemplate x:Key="TrackCellTemplate">
		<ContentControl Content="{Binding Track}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="ArtistCellTemplate">
		<ContentControl Content="{Binding Artist}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="AlbumCellTemplate">
		<ContentControl Content="{Binding Album}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="TitleCellTemplate">
		<ContentControl Content="{Binding Title}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="GenreCellTemplate">
		<ContentControl Content="{Binding Genre}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="YearCellTemplate">
		<ContentControl Content="{Binding Year}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="LengthCellTemplate">
		<TextBlock Text="{Binding Length}" HorizontalAlignment="Right" Foreground="Gray"/>
	</DataTemplate>
	<DataTemplate x:Key="PathCellTemplate">
		<ContentControl Content="{Binding Path}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="Play_CountCellTemplate">
		<TextBlock Text="{Binding Play_Count}" HorizontalAlignment="Right" Foreground="Gray"/>
	</DataTemplate>
	<DataTemplate x:Key="Last_PlayedCellTemplate">
		<ContentControl Content="{Binding Last_Played}" ContentTemplate="{StaticResource CommonTemplate}"/>
	</DataTemplate>

	<DataTemplate x:Key="NumberActiveCellTemplate">
		<TextBlock Text="{Binding Number}" HorizontalAlignment="Right" Foreground="Black"/>
	</DataTemplate>
	<DataTemplate x:Key="TrackActiveCellTemplate">
		<ContentControl Content="{Binding Track}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="ArtistActiveCellTemplate">
		<ContentControl Content="{Binding Artist}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="AlbumActiveCellTemplate">
		<ContentControl Content="{Binding Album}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="TitleActiveCellTemplate">
		<ContentControl Content="{Binding Title}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="GenreActiveCellTemplate">
		<ContentControl Content="{Binding Genre}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="YearActiveCellTemplate">
		<ContentControl Content="{Binding Year}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="LengthActiveCellTemplate">
		<TextBlock Text="{Binding Length}" HorizontalAlignment="Right" Foreground="Black"/>
	</DataTemplate>
	<DataTemplate x:Key="PathActiveCellTemplate">
		<ContentControl Content="{Binding Path}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>
	<DataTemplate x:Key="Play_CountActiveCellTemplate">
		<TextBlock Text="{Binding Play_Count}" HorizontalAlignment="Right" Foreground="Black"/>
	</DataTemplate>
	<DataTemplate x:Key="Last_PlayedActiveCellTemplate">
		<ContentControl Content="{Binding Last_Played}" ContentTemplate="{StaticResource CommonActiveTemplate}"/>
	</DataTemplate>

	<Style x:Key="ListViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ListItemActiveFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#33dbfbdd" Offset="0"/>
		<GradientStop Color="#33c1fcc9" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemActiveHoverFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#88dbfbdd" Offset="0"/>
		<GradientStop Color="#88c1fcc9" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemActiveSelectedFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ffdbfbdd" Offset="0"/>
		<GradientStop Color="#ffc1fcc9" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemHoverFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#fffafbfd" Offset="0"/>
		<GradientStop Color="#ffebf4fd" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFebf4fe" Offset="0"/>
		<GradientStop Color="#FFcfe4fe" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedInactiveFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#fff8f8f8" Offset="0"/>
		<GradientStop Color="#ffe5e5e5" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ListItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFdbebfb" Offset="0"/>
		<GradientStop Color="#FFc1dcfa" Offset="1"/>
	</LinearGradientBrush>

	<!-- style the tree view -->
	<Style x:Key="AeroNavigationStyle" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<StackPanel>
                        <Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Border BorderBrush="{TemplateBinding BorderBrush}" 
									BorderThickness="1" 
									Background="{TemplateBinding Background}" 
									CornerRadius="2" 
									SnapsToDevicePixels="true"
									Grid.Column="0" 
									Grid.ColumnSpan="2"
									MinHeight="21"
									x:Name="Item">
								<Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                    <DockPanel x:Name="Panel">
										<ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
											<ToggleButton.Style>
												<Style TargetType="ToggleButton">
													<Setter Property="UIElement.Focusable" Value="false" />
													<Setter Property="FrameworkElement.Width" Value="16" />
													<Setter Property="FrameworkElement.Height" Value="16" />
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate TargetType="ToggleButton">
																<Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
																	<Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
																		<Path.Data>
																			<PathGeometry Figures="M0,0L0,6L6,0z" />
																		</Path.Data>
																		<Path.RenderTransform>
																			<RotateTransform Angle="135" CenterX="3" CenterY="3" />
																		</Path.RenderTransform>
																	</Path>
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger Property="UIElement.IsMouseOver" Value="True">
																		<Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
																		<Setter TargetName="ExpandPath" Property="Shape.Fill"  Value="#00FFFFFF" />
																	</Trigger>
																	<Trigger Property="ToggleButton.IsChecked" Value="True">
																		<Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
																			<Setter.Value>
																				<RotateTransform Angle="180" CenterX="3" CenterY="3" />
																			</Setter.Value>
																		</Setter>
																		<Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
																		<Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</ToggleButton.Style>
										</ToggleButton>
										<Border x:Name="Bd"
												HorizontalAlignment="Stretch"
												BorderThickness="{TemplateBinding Border.BorderThickness}"
												BorderBrush="{TemplateBinding Border.BorderBrush}"
												Padding="{TemplateBinding Control.Padding}"
												Background="{TemplateBinding Panel.Background}"
												SnapsToDevicePixels="True">
											<ContentPresenter x:Name="PART_Header"
															  Content="{TemplateBinding HeaderedContentControl.Header}"
															  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
															  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
															  ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
															  ContentSource="Header"
															  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
															  VerticalAlignment="Center"
															  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
										</Border>
									</DockPanel>
								</Border>
							</Border>
							<Border Padding="0 0 0 0" Grid.Column="0" Grid.Row="1">
								<ItemsPresenter x:Name="ItemsHost"/>
							</Border>
						</Grid>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="TreeViewItem.IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true" SourceName="Item">
							<Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>
							<Setter Property="BorderBrush" Value="#ffb8d6fb"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
						</Trigger>
						<Trigger Property="TreeViewItem.IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource ListItemSelectedFill}"/>
							<Setter Property="BorderBrush" Value="#FF84acdd"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="TreeViewItem.IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}"/>
							<Setter Property="BorderBrush" Value="#FFd9d9d9"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="TreeViewItem.IsSelected" Value="true"/>
								<Condition Property="IsMouseOver" Value="true" SourceName="Item"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}"/>
							<Setter Property="BorderBrush" Value="#FF7da2ce"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
						</MultiTrigger>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ClassicNavigationStyle" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<StackPanel>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Border BorderBrush="{TemplateBinding BorderBrush}" 
									BorderThickness="1" 
									Background="{TemplateBinding Background}" 
									CornerRadius="0" 
									SnapsToDevicePixels="true"
									Grid.Column="0" 
									Grid.ColumnSpan="2"
									MinHeight="23"
									x:Name="Item">
								<Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="0">
									<DockPanel x:Name="Panel">
										<ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
											<ToggleButton.Style>
												<Style TargetType="ToggleButton">
													<Setter Property="UIElement.Focusable" Value="false" />
													<Setter Property="FrameworkElement.Width" Value="16" />
													<Setter Property="FrameworkElement.Height" Value="16" />
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate TargetType="ToggleButton">
																<Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
																	<Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
																		<Path.Data>
																			<PathGeometry Figures="M0,0L0,6L6,0z" />
																		</Path.Data>
																		<Path.RenderTransform>
																			<RotateTransform Angle="135" CenterX="3" CenterY="3" />
																		</Path.RenderTransform>
																	</Path>
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger Property="UIElement.IsMouseOver" Value="True">
																		<Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
																		<Setter TargetName="ExpandPath" Property="Shape.Fill"  Value="#00FFFFFF" />
																	</Trigger>
																	<Trigger Property="ToggleButton.IsChecked" Value="True">
																		<Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
																			<Setter.Value>
																				<RotateTransform Angle="180" CenterX="3" CenterY="3" />
																			</Setter.Value>
																		</Setter>
																		<Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
																		<Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</ToggleButton.Style>
										</ToggleButton>
										<Border x:Name="Bd"
												HorizontalAlignment="Stretch"
												BorderThickness="{TemplateBinding Border.BorderThickness}"
												BorderBrush="{TemplateBinding Border.BorderBrush}"
												Padding="{TemplateBinding Control.Padding}"
												Background="{TemplateBinding Panel.Background}"
												SnapsToDevicePixels="True">
											<ContentPresenter x:Name="PART_Header"
															  Content="{TemplateBinding HeaderedContentControl.Header}"
															  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
															  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
															  ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
															  ContentSource="Header"
															  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
															  VerticalAlignment="Center"
															  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
										</Border>
									</DockPanel>
								</Border>
							</Border>
							<Border Padding="0 0 0 0" Grid.Column="0" Grid.Row="1">
								<ItemsPresenter x:Name="ItemsHost"/>
							</Border>
						</Grid>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="TreeViewItem.IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="TreeViewItem.IsSelected" Value="true">
							<Setter Property="Background" Value="MidnightBlue"/>
							<Setter Property="Foreground" Value="White"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="TreeViewItem.IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="LightGray"/>
							<Setter Property="Foreground" Value="Black"/>
						</MultiTrigger>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HandHover" TargetType="FrameworkElement">
		<Style.Triggers>
			<Trigger Property="FrameworkElement.IsMouseOver" Value="True">
				<Setter Property="FrameworkElement.Cursor" Value="Hand"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- style the volume and track slide -->
	<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="Transparent"/>
	<LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
		<GradientStop Color="White" Offset=".9"/>
	</LinearGradientBrush>
	<Style x:Key="SliderRepeatButtonColorStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="#797a7a" Height="2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrbThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="Width" Value="11"/>
		<Setter Property="Foreground" Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Image Source="Images\Buttons\Small Orb.png"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MiniThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Height" Value="6"/>
		<Setter Property="Width" Value="4"/>
		<Setter Property="Foreground" Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle Height="4" Width="4" Fill="#595a5a"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VolumeSlideStyle" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="#FFC4C4C4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border x:Name="TrackBackground" Margin="0" VerticalAlignment="center" Height="4.0" Grid.Row="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" CornerRadius="1">
								<Canvas Margin="-6,-1">
									<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Height="4.0" Visibility="Hidden"/>
								</Canvas>
							</Border>
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb" Style="{StaticResource OrbThumbStyle}"/>
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TrackSlideStyle" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="#FFC4C4C4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border x:Name="TrackBackground" Margin="0,0" VerticalAlignment="center" Height="4.0" Grid.Row="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" CornerRadius="1">
								<Canvas Margin="-6,-1">
									<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Height="4.0" Visibility="Hidden"/>
								</Canvas>
							</Border>
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Style="{StaticResource SliderRepeatButtonColorStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb" Style="{StaticResource MiniThumbStyle}"/>
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- style the search button -->
	<Style x:Key="SearchButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="SearchButton" Source="Images\Buttons\Search.png" Width="15" Height="15" SnapsToDevicePixels="True"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SearchClearButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="SearchClearButton" Source="Images\Buttons\SearchClear.png" Width="15" Height="15"/>
						<Image x:Name="SearchClearButtonShine"  Source="Images\Buttons\SearchClear Shine.png" Width="15" Height="15" Visibility="Hidden"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="SearchClearButtonShine" Value="Visible"/>
							<Setter Property="Visibility" TargetName="SearchClearButton" Value="Hidden"/>
							<Setter Property="Cursor" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- style the control panel -->
	<Style x:Key="ControlPanelLinkStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<TextBlock Margin="18 0 0 0" Foreground="#151c55" x:Name="LinkText">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" TargetName="LinkText" Value="Blue"/>
							<Setter Property="TextDecorations" TargetName="LinkText" Value="Baseline"/>
							<Setter Property="Cursor" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ControlPanelLinkActiveStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Ellipse Fill="#151c55" Height="6" Width="6" StrokeThickness="1" Stroke="#151c55" HorizontalAlignment="Left"/>
						<TextBlock Margin="18 0 0 0" Foreground="#151c55" x:Name="LinkText" FontWeight="Bold" HorizontalAlignment="Left">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</TextBlock>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="AeroControlPanelTitleStyle" TargetType="TextBlock">
		<Setter Property="Margin" Value="25,25,0,0"/>
		<Setter Property="Foreground" Value="#003399"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>
	<Style x:Key="ClassicControlPanelTitleStyle" TargetType="TextBlock">
		<Setter Property="Margin" Value="25,25,0,0"/>
		<!--<Setter Property="FontSize" Value="16"/>-->
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>

	<!-- tray Icon  -->
	<tb:TaskbarIcon x:Key="NotifyIcon" IconSource="Images\Icons\Tray.ico" ToolTipText="A simple approach to music"/>
	<Style x:Key="NotificationCloseButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image x:Name="ShuffleButton" Source="Images\Buttons\Close Notification.png" Width="8" Height="8"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NotificationLinkStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<TextBlock Margin="0 0 0 0" Foreground="#151c55" x:Name="LinkText">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" TargetName="LinkText" Value="Blue"/>
							<Setter Property="TextDecorations" TargetName="LinkText" Value="Baseline"/>
							<Setter Property="Cursor" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<BitmapImage UriSource="Images\Misc\SortArrowUp.png" x:Key="SortArrowUp"/>
	<BitmapImage UriSource="Images\Misc\SortArrowDown.png" x:Key="SortArrowDown"/>
	<Image x:Key="LibraryIcon" Source="Images\Icons\Library.ico" Width="16" Height="16"/>
	<Image x:Key="QueueIcon" Source="Images\Icons\Queue.ico" Width="16" Height="16"/>
	<Image x:Key="HistoryIcon" Source="Images\Icons\Clock.ico" Width="16" Height="16"/>
	<Image x:Key="PlaylistIcon" Source="Images\Icons\DiscAudio.ico" Width="16" Height="16"/>

	<Image x:Key="DefaultAlbumArt" Source="Images\AlbumArt\Default.jpg"/>

</ResourceDictionary>